name: Build and Attach APK to Release

permissions:
  contents: write

on:
  release:
    types: [published]  # Trigger เมื่อมีการสร้าง release ใหม่

jobs:
  # Stage 1: Setup environment and dependencies
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable
          
      - name: Get Flutter dependencies
        run: flutter pub get
        
      - name: Grant execute permissions
        run: chmod +x generate_i18n.sh
        
      - name: Install flutter_localizations
        run: flutter pub add flutter_localization

  # Stage 2: Build the APK
  build:
    needs: setup  # รอให้ setup เสร็จก่อน
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          
      - name: Get Flutter dependencies
        run: flutter pub get
        
      - name: Run build_runner
        run: flutter pub run build_runner build --delete-conflicting-outputs
        
      - name: Run generate_i18n script
        run: sh generate_i18n.sh
        
      - name: Build APK
        run: flutter build apk --release
        
      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk

  # Stage 3: Upload to Release
  release:
    needs: build  # รอให้ build เสร็จก่อน
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v4
        with:
          name: app-release.apk
          path: ./apk
          
      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./apk/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive